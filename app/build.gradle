plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
}

android {
    compileSdk rootProject.ext.compileSdkVersion

    defaultConfig {
        applicationId "com.demo.shaadi"
        minSdk rootProject.ext.minSdkVersion
        targetSdk rootProject.ext.targetSdkVersion
        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName

        testInstrumentationRunner rootProject.ext.testInstrumentationRunner
    }

    buildTypes {
        debug {
            buildConfigField 'String', 'SERVER_BASE_URL', '"https://randomuser.me/api/"'
        }
        release {
            buildConfigField 'String', 'SERVER_BASE_URL', '"https://randomuser.me/api/"'
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    buildFeatures {
        viewBinding true
    }
}

dependencies {

    implementation rootProject.ext.core_ktx
    implementation rootProject.ext.appcompat
    implementation rootProject.ext.material
    implementation rootProject.ext.constraintlayout
    testImplementation rootProject.ext.junit
    androidTestImplementation rootProject.ext.ext_junit
    androidTestImplementation rootProject.ext.espresso_core

    androidTestImplementation rootProject.ext.cardview

    //Glide
    implementation rootProject.ext.glide
    annotationProcessor rootProject.ext.glide_compiler

    // Lifecycles only (without ViewModel or LiveData)
    implementation rootProject.ext.lifecycle_runtime
    // ViewModel
    implementation rootProject.ext.lifecycle_viewmodel
    // LiveData
    implementation rootProject.ext.lifecycle_livedata
    // Coroutines
    implementation rootProject.ext.coroutines
    //Timber
    implementation rootProject.ext.timber

    // okhttp
    implementation rootProject.ext.gson
    implementation rootProject.ext.okhttp
    implementation rootProject.ext.logging_interceptor

    // retrofit
    implementation rootProject.ext.retrofit
    implementation rootProject.ext.converter_gson
    implementation rootProject.ext.rxjava2
    implementation rootProject.ext.converter_scalars

    // kotlin based dependency injection koin
//    implementation rootProject.ext.koin_viewmodel
    implementation rootProject.ext.koin_android
//    implementation rootProject.ext.koin_scope
    implementation rootProject.ext.koin_core

    //Room
    implementation rootProject.ext.room_runtime
    annotationProcessor rootProject.ext.room_compiler

    // To use Kotlin annotation processing tool (kapt)
    kapt rootProject.ext.room_compiler

    // optional - Kotlin Extensions and Coroutines support for Room
    implementation rootProject.ext.room_coroutine
}